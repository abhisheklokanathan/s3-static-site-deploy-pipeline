name: Deploy My Personal Website to S3 bucket.

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write    
jobs:
  Login-to-AWS:
    runs-on: ubuntu-latest
    steps:
    - name: AWS configure credentilas
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        role-to-assume: ${{ secrets.IAM_ROLE }}
        aws-region: ap-south-1
        
  Setup-Credentials:
    runs-on: ubuntu-latest
    needs: Login-to-AWS
    steps:    
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Set up git
      run: |
       git config user.name "${{ github.actor }}"
       git config user.email "${{ github.actor }}@gmail.com"

  Get-Tag-Version:
    runs-on: ubuntu-latest
    needs: [Login-to-AWS,Setup-Credentials]
    outputs:
      version: ${{ steps.get_version.outputs.version }}    
    steps:  
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required to get all tags
        
    - name: Get latest semantic version
      id: get_version
      run: |
          # Get the latest tag (e.g. v1.2.3)
          LATEST_TAG=$(git tag --sort=-v:refname | grep '^v' | head -n 1)
          echo "Latest tag: $LATEST_TAG"

          if [ -z "$LATEST_TAG" ]; then
            VERSION="1.0.0"
          else
            IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"
            MINOR=$((MINOR + 1))
            VERSION="${MAJOR}.${MINOR}.${PATCH}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  Update-Tag-Version:
    runs-on: ubuntu-latest
    needs: [Login-to-AWS,Setup-Credentials,Get-Tag-Version]
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Create Git tag for new version
      run: |
          git tag v${{ needs.Get-Tag-Version.outputs.VERSION }}
          git push origin v${{ needs.Get-Tag-Version.outputs.VERSION }}

  Deply-to-S3-Bucket:
    runs-on: ubuntu-latest
    needs: [Login-to-AWS,Setup-Credentials,Get-Tag-Version,Update-Tag-Version,Create-Upload-Artifact]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4    

      - name: Download tarball artifact
        uses: actions/download-artifact@v4
        with:
          name: my-tar-archive
          path: .
          merge-multiple: true

      - name: Extract .tar.gz file
        run: |
         VERSION="${{ needs.Get-Tag-Version.outputs.VERSION }}"
         TARBALL="my-static-site-$VERSION.tar.gz"
         EXTRACT_DIR="extracted-v$VERSION"

         mkdir "$EXTRACT_DIR"
         tar -xzf "$TARBALL" -C "$EXTRACT_DIR"

         echo "Extracted contents:"
         ls -l "$EXTRACT_DIR"

      - name: Upload archive to S3
        run: |
          VERSION="${{ needs.Get-Tag-Version.outputs.VERSION }}"
          DIR="extracted-v$VERSION"

          aws s3 cp "$DIR/index.html" s3://aws-mypersonal-website/index.html
          aws s3 cp "$DIR/images/" s3://aws-mypersonal-website/images/ --recursive
          aws s3 cp "$DIR/styles/" s3://aws-mypersonal-website/styles/ --recursive


















